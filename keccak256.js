function g(t){if(!Number.isSafeInteger(t)||t<0)throw new Error(`Wrong positive integer: ${t}`)}function R(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}function b(t,...e){if(!R(t))throw new Error("Expected Uint8Array");if(e.length>0&&!e.includes(t.length))throw new Error(`Expected Uint8Array of length ${e}, not of length=${t.length}`)}function k(t,e=!0){if(t.destroyed)throw new Error("Hash instance has been destroyed");if(e&&t.finished)throw new Error("Hash#digest() has already been called")}function L(t,e){b(t);let n=e.outputLen;if(t.length<n)throw new Error(`digestInto() expects output buffer of length at least ${n}`)}var d=BigInt(4294967295),_=BigInt(32);function V(t,e=!1){return e?{h:Number(t&d),l:Number(t>>_&d)}:{h:Number(t>>_&d)|0,l:Number(t&d)|0}}function A(t,e=!1){let n=new Uint32Array(t.length),r=new Uint32Array(t.length);for(let s=0;s<t.length;s++){let{h:i,l:o}=V(t[s],e);[n[s],r[s]]=[i,o]}return[n,r]}var m=(t,e,n)=>t<<n|e>>>32-n,B=(t,e,n)=>e<<n|t>>>32-n,O=(t,e,n)=>e<<n-32|t>>>64-n,I=(t,e,n)=>t<<n-32|e>>>64-n;var E=t=>new Uint32Array(t.buffer,t.byteOffset,Math.floor(t.byteLength/4));function M(t){return t instanceof Uint8Array||t!=null&&typeof t=="object"&&t.constructor.name==="Uint8Array"}var W=new Uint8Array(new Uint32Array([287454020]).buffer)[0]===68;if(!W)throw new Error("Non little-endian hardware is not supported");function D(t){if(typeof t!="string")throw new Error(`utf8ToBytes expected string, got ${typeof t}`);return new Uint8Array(new TextEncoder().encode(t))}function w(t){if(typeof t=="string"&&(t=D(t)),!M(t))throw new Error(`expected Uint8Array, got ${typeof t}`);return t}var x=class{clone(){return this._cloneInto()}},et={}.toString;function U(t){let e=r=>t().update(w(r)).digest(),n=t();return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=()=>t(),e}function H(t){let e=(r,s)=>t(s).update(w(r)).digest(),n=t({});return e.outputLen=n.outputLen,e.blockLen=n.blockLen,e.create=r=>t(r),e}var[F,j,X]=[[],[],[]],P=BigInt(0),h=BigInt(1),v=BigInt(2),q=BigInt(7),z=BigInt(256),G=BigInt(113);for(let t=0,e=h,n=1,r=0;t<24;t++){[n,r]=[r,(2*n+3*r)%5],F.push(2*(5*r+n)),j.push((t+1)*(t+2)/2%64);let s=P;for(let i=0;i<7;i++)e=(e<<h^(e>>q)*G)%z,e&v&&(s^=h<<(h<<BigInt(i))-h);X.push(s)}var[J,K]=A(X,!0),S=(t,e,n)=>n>32?O(t,e,n):m(t,e,n),T=(t,e,n)=>n>32?I(t,e,n):B(t,e,n);function Q(t,e=24){let n=new Uint32Array(10);for(let r=24-e;r<24;r++){for(let o=0;o<10;o++)n[o]=t[o]^t[o+10]^t[o+20]^t[o+30]^t[o+40];for(let o=0;o<10;o+=2){let c=(o+8)%10,p=(o+2)%10,l=n[p],u=n[p+1],N=S(l,u,1)^n[c],C=T(l,u,1)^n[c+1];for(let a=0;a<50;a+=10)t[o+a]^=N,t[o+a+1]^=C}let s=t[2],i=t[3];for(let o=0;o<24;o++){let c=j[o],p=S(s,i,c),l=T(s,i,c),u=F[o];s=t[u],i=t[u+1],t[u]=p,t[u+1]=l}for(let o=0;o<50;o+=10){for(let c=0;c<10;c++)n[c]=t[o+c];for(let c=0;c<10;c++)t[o+c]^=~n[(c+2)%10]&n[(c+4)%10]}t[0]^=J[r],t[1]^=K[r]}n.fill(0)}var y=class t extends x{constructor(e,n,r,s=!1,i=24){if(super(),this.blockLen=e,this.suffix=n,this.outputLen=r,this.enableXOF=s,this.rounds=i,this.pos=0,this.posOut=0,this.finished=!1,this.destroyed=!1,g(r),0>=this.blockLen||this.blockLen>=200)throw new Error("Sha3 supports only keccak-f1600 function");this.state=new Uint8Array(200),this.state32=E(this.state)}keccak(){Q(this.state32,this.rounds),this.posOut=0,this.pos=0}update(e){k(this);let{blockLen:n,state:r}=this;e=w(e);let s=e.length;for(let i=0;i<s;){let o=Math.min(n-this.pos,s-i);for(let c=0;c<o;c++)r[this.pos++]^=e[i++];this.pos===n&&this.keccak()}return this}finish(){if(this.finished)return;this.finished=!0;let{state:e,suffix:n,pos:r,blockLen:s}=this;e[r]^=n,n&128&&r===s-1&&this.keccak(),e[s-1]^=128,this.keccak()}writeInto(e){k(this,!1),b(e),this.finish();let n=this.state,{blockLen:r}=this;for(let s=0,i=e.length;s<i;){this.posOut>=r&&this.keccak();let o=Math.min(r-this.posOut,i-s);e.set(n.subarray(this.posOut,this.posOut+o),s),this.posOut+=o,s+=o}return e}xofInto(e){if(!this.enableXOF)throw new Error("XOF is not possible for this instance");return this.writeInto(e)}xof(e){return g(e),this.xofInto(new Uint8Array(e))}digestInto(e){if(L(e,this),this.finished)throw new Error("digest() was already called");return this.writeInto(e),this.destroy(),e}digest(){return this.digestInto(new Uint8Array(this.outputLen))}destroy(){this.destroyed=!0,this.state.fill(0)}_cloneInto(e){let{blockLen:n,suffix:r,outputLen:s,rounds:i,enableXOF:o}=this;return e||(e=new t(n,r,s,o,i)),e.state32.set(this.state32),e.pos=this.pos,e.posOut=this.posOut,e.finished=this.finished,e.rounds=i,e.suffix=r,e.outputLen=s,e.enableXOF=o,e.destroyed=this.destroyed,e}},f=(t,e,n)=>U(()=>new y(e,t,n)),it=f(6,144,224/8),ct=f(6,136,256/8),ft=f(6,104,384/8),ut=f(6,72,512/8),ht=f(1,144,224/8),Y=f(1,136,256/8),pt=f(1,104,384/8),lt=f(1,72,512/8),$=(t,e,n)=>H((r={})=>new y(e,t,r.dkLen===void 0?n:r.dkLen,!0)),at=$(31,168,128/8),dt=$(31,136,256/8);export{Y as keccak256};
/*! Bundled license information:

@noble/hashes/esm/utils.js:
  (*! noble-hashes - MIT License (c) 2022 Paul Miller (paulmillr.com) *)
*/
